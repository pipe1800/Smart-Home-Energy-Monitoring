services:
  db:
    image: postgres:15-alpine
    container_name: smart_home_db
    restart: always
    ports:
      - "5433:5432"
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      #Added API key to ensure plug and play for the interviewer's testing
      OPENROUTER_API_KEY: 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
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./backend/db:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5

  telemetry_service:
    build:
      context: ./backend
      dockerfile: telemetry_service/Dockerfile
    container_name: telemetry_service
    restart: always
    ports:
      - "8001:8000"  
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
  
  auth_service:
    build:
      context: ./backend
      dockerfile: auth_service/Dockerfile
    container_name: auth_service
    restart: always
    ports:
      - "8000:8000"  
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy

  ai_service:
    build:
      context: ./backend
      dockerfile: ai_service/Dockerfile
    container_name: ai_service
    restart: always
    ports:
      - "8002:8000"  
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy

volumes:
  db_data: